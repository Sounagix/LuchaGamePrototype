//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scrips/PlayerController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerController"",
    ""maps"": [
        {
            ""name"": ""GamePad"",
            ""id"": ""8c581f61-ed4d-4c78-87d7-12cb123b7f0c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""642f1fda-ca68-4964-b112-6221fdc95260"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""8de82f64-5122-4be2-8b9a-1cf4fbd60da9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""2d46fb30-47c5-42f5-8182-7aa2b2690bfd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Kick"",
                    ""type"": ""Button"",
                    ""id"": ""1cabb8bb-fce7-4013-b8bd-c4adac9b80e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""1c9e94ac-11f9-443f-82ac-6534f3778ab6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""e3637b5e-f1ef-4424-a194-b5e406d9d5f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""da91bd5d-0650-4dcf-b4a8-96eed50b53de"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1c7ef3a-e33d-4dee-8863-c6d067e9c72e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""026ca0d0-4a0d-4477-ae7a-d1d6caed1b3b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db1eedd4-77c9-49fe-ab0c-1211d740e411"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e15243a8-a988-4b94-8a3c-45590ab5219a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26e075db-d4c2-47e1-9420-8d2cf908df7a"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""KeyBoard"",
            ""id"": ""8002c6ca-492c-4633-afa5-75c9418b593f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""325ced5e-32bb-4e1c-b1d4-3b773d16eef9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""92a7b629-66ca-428d-b22b-53a11afe1330"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""15d52f12-8d98-4254-878a-9f30d3b8aa82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Kick"",
                    ""type"": ""Button"",
                    ""id"": ""85cf3d2b-b42d-41fb-bec4-6ba5f6e88358"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""ffbd9bf6-9a8f-4470-8d11-f54746988ddd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""1e643957-9952-497a-94fc-e00d31fecc31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""94ccf701-ad11-4e18-badb-5abcd289f449"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7bc82184-9e52-413b-96bd-dc1c5b4d1146"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c9ebfeb2-2e4c-4bf1-a383-51d2c8d575b1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""765480c0-fa25-4c46-879e-aaf3e8e82ef8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0e273014-be01-48dc-9a56-1a60a545bd94"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""af961d86-8c7b-4e31-b9b3-b9807e900dca"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8e10e8c-3c2a-488b-bbfb-5d1eadae4c89"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f472cd52-eb25-48f3-af12-3cf4799500fd"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1b0a714-4c22-4c8b-b012-591a4bbb2275"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da0d4beb-5d06-4319-8084-8ec5d54a7699"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""JoyStick"",
            ""id"": ""1d6f682a-e3d2-4671-a3d0-0d98eceb7d8f"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""d3037a77-9737-40d1-85e9-4c69c25abe94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""bbbd0366-9b15-4179-a801-46c89525652f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d390f37a-6386-48f9-9652-e89ebfd11f5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Kick"",
                    ""type"": ""Button"",
                    ""id"": ""8fafb0fd-016b-41c6-b499-892702378a79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""bf78acf9-dc73-45d2-8105-9c75516d8eb9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""6fbeae02-ba25-42c1-b7d5-69eadebfd55e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fb012202-168c-48ee-b797-6a6cf9424f18"",
                    ""path"": ""<HID::PC Game Controller       >/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""124a0b1f-ee30-43e8-9fab-42e2d1333120"",
                    ""path"": ""<HID::PC Game Controller       >/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e80878d9-6b1c-43e2-8e9d-f1b39e1f5b94"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PcGamePad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""661dde19-ae37-417f-be84-2be90bc5f79c"",
                    ""path"": ""<HID::PC Game Controller       >/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Kick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""673771f7-f928-446a-9634-b830916f9418"",
                    ""path"": ""<HID::PC Game Controller       >/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9941be5c-246d-49c9-9994-7a1f2c5e197f"",
                    ""path"": ""<HID::PC Game Controller       >/button12"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyBoard"",
            ""bindingGroup"": ""KeyBoard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""GamePad"",
            ""bindingGroup"": ""GamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""PcGamePad"",
            ""bindingGroup"": ""PcGamePad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // GamePad
        m_GamePad = asset.FindActionMap("GamePad", throwIfNotFound: true);
        m_GamePad_Move = m_GamePad.FindAction("Move", throwIfNotFound: true);
        m_GamePad_Jump = m_GamePad.FindAction("Jump", throwIfNotFound: true);
        m_GamePad_Attack = m_GamePad.FindAction("Attack", throwIfNotFound: true);
        m_GamePad_Kick = m_GamePad.FindAction("Kick", throwIfNotFound: true);
        m_GamePad_Block = m_GamePad.FindAction("Block", throwIfNotFound: true);
        m_GamePad_Back = m_GamePad.FindAction("Back", throwIfNotFound: true);
        // KeyBoard
        m_KeyBoard = asset.FindActionMap("KeyBoard", throwIfNotFound: true);
        m_KeyBoard_Move = m_KeyBoard.FindAction("Move", throwIfNotFound: true);
        m_KeyBoard_Attack = m_KeyBoard.FindAction("Attack", throwIfNotFound: true);
        m_KeyBoard_Jump = m_KeyBoard.FindAction("Jump", throwIfNotFound: true);
        m_KeyBoard_Kick = m_KeyBoard.FindAction("Kick", throwIfNotFound: true);
        m_KeyBoard_Block = m_KeyBoard.FindAction("Block", throwIfNotFound: true);
        m_KeyBoard_Back = m_KeyBoard.FindAction("Back", throwIfNotFound: true);
        // JoyStick
        m_JoyStick = asset.FindActionMap("JoyStick", throwIfNotFound: true);
        m_JoyStick_Attack = m_JoyStick.FindAction("Attack", throwIfNotFound: true);
        m_JoyStick_Move = m_JoyStick.FindAction("Move", throwIfNotFound: true);
        m_JoyStick_Jump = m_JoyStick.FindAction("Jump", throwIfNotFound: true);
        m_JoyStick_Kick = m_JoyStick.FindAction("Kick", throwIfNotFound: true);
        m_JoyStick_Block = m_JoyStick.FindAction("Block", throwIfNotFound: true);
        m_JoyStick_Back = m_JoyStick.FindAction("Back", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePad
    private readonly InputActionMap m_GamePad;
    private IGamePadActions m_GamePadActionsCallbackInterface;
    private readonly InputAction m_GamePad_Move;
    private readonly InputAction m_GamePad_Jump;
    private readonly InputAction m_GamePad_Attack;
    private readonly InputAction m_GamePad_Kick;
    private readonly InputAction m_GamePad_Block;
    private readonly InputAction m_GamePad_Back;
    public struct GamePadActions
    {
        private @PlayerController m_Wrapper;
        public GamePadActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_GamePad_Move;
        public InputAction @Jump => m_Wrapper.m_GamePad_Jump;
        public InputAction @Attack => m_Wrapper.m_GamePad_Attack;
        public InputAction @Kick => m_Wrapper.m_GamePad_Kick;
        public InputAction @Block => m_Wrapper.m_GamePad_Block;
        public InputAction @Back => m_Wrapper.m_GamePad_Back;
        public InputActionMap Get() { return m_Wrapper.m_GamePad; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePadActions set) { return set.Get(); }
        public void SetCallbacks(IGamePadActions instance)
        {
            if (m_Wrapper.m_GamePadActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_GamePadActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_GamePadActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_GamePadActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_GamePadActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GamePadActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GamePadActionsCallbackInterface.OnJump;
                @Attack.started -= m_Wrapper.m_GamePadActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_GamePadActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_GamePadActionsCallbackInterface.OnAttack;
                @Kick.started -= m_Wrapper.m_GamePadActionsCallbackInterface.OnKick;
                @Kick.performed -= m_Wrapper.m_GamePadActionsCallbackInterface.OnKick;
                @Kick.canceled -= m_Wrapper.m_GamePadActionsCallbackInterface.OnKick;
                @Block.started -= m_Wrapper.m_GamePadActionsCallbackInterface.OnBlock;
                @Block.performed -= m_Wrapper.m_GamePadActionsCallbackInterface.OnBlock;
                @Block.canceled -= m_Wrapper.m_GamePadActionsCallbackInterface.OnBlock;
                @Back.started -= m_Wrapper.m_GamePadActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_GamePadActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_GamePadActionsCallbackInterface.OnBack;
            }
            m_Wrapper.m_GamePadActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Kick.started += instance.OnKick;
                @Kick.performed += instance.OnKick;
                @Kick.canceled += instance.OnKick;
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
            }
        }
    }
    public GamePadActions @GamePad => new GamePadActions(this);

    // KeyBoard
    private readonly InputActionMap m_KeyBoard;
    private IKeyBoardActions m_KeyBoardActionsCallbackInterface;
    private readonly InputAction m_KeyBoard_Move;
    private readonly InputAction m_KeyBoard_Attack;
    private readonly InputAction m_KeyBoard_Jump;
    private readonly InputAction m_KeyBoard_Kick;
    private readonly InputAction m_KeyBoard_Block;
    private readonly InputAction m_KeyBoard_Back;
    public struct KeyBoardActions
    {
        private @PlayerController m_Wrapper;
        public KeyBoardActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_KeyBoard_Move;
        public InputAction @Attack => m_Wrapper.m_KeyBoard_Attack;
        public InputAction @Jump => m_Wrapper.m_KeyBoard_Jump;
        public InputAction @Kick => m_Wrapper.m_KeyBoard_Kick;
        public InputAction @Block => m_Wrapper.m_KeyBoard_Block;
        public InputAction @Back => m_Wrapper.m_KeyBoard_Back;
        public InputActionMap Get() { return m_Wrapper.m_KeyBoard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyBoardActions set) { return set.Get(); }
        public void SetCallbacks(IKeyBoardActions instance)
        {
            if (m_Wrapper.m_KeyBoardActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnMove;
                @Attack.started -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnAttack;
                @Jump.started -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnJump;
                @Kick.started -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnKick;
                @Kick.performed -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnKick;
                @Kick.canceled -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnKick;
                @Block.started -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnBlock;
                @Block.performed -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnBlock;
                @Block.canceled -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnBlock;
                @Back.started -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_KeyBoardActionsCallbackInterface.OnBack;
            }
            m_Wrapper.m_KeyBoardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Kick.started += instance.OnKick;
                @Kick.performed += instance.OnKick;
                @Kick.canceled += instance.OnKick;
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
            }
        }
    }
    public KeyBoardActions @KeyBoard => new KeyBoardActions(this);

    // JoyStick
    private readonly InputActionMap m_JoyStick;
    private IJoyStickActions m_JoyStickActionsCallbackInterface;
    private readonly InputAction m_JoyStick_Attack;
    private readonly InputAction m_JoyStick_Move;
    private readonly InputAction m_JoyStick_Jump;
    private readonly InputAction m_JoyStick_Kick;
    private readonly InputAction m_JoyStick_Block;
    private readonly InputAction m_JoyStick_Back;
    public struct JoyStickActions
    {
        private @PlayerController m_Wrapper;
        public JoyStickActions(@PlayerController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Attack => m_Wrapper.m_JoyStick_Attack;
        public InputAction @Move => m_Wrapper.m_JoyStick_Move;
        public InputAction @Jump => m_Wrapper.m_JoyStick_Jump;
        public InputAction @Kick => m_Wrapper.m_JoyStick_Kick;
        public InputAction @Block => m_Wrapper.m_JoyStick_Block;
        public InputAction @Back => m_Wrapper.m_JoyStick_Back;
        public InputActionMap Get() { return m_Wrapper.m_JoyStick; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JoyStickActions set) { return set.Get(); }
        public void SetCallbacks(IJoyStickActions instance)
        {
            if (m_Wrapper.m_JoyStickActionsCallbackInterface != null)
            {
                @Attack.started -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnAttack;
                @Move.started -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnJump;
                @Kick.started -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnKick;
                @Kick.performed -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnKick;
                @Kick.canceled -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnKick;
                @Block.started -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnBlock;
                @Block.performed -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnBlock;
                @Block.canceled -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnBlock;
                @Back.started -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_JoyStickActionsCallbackInterface.OnBack;
            }
            m_Wrapper.m_JoyStickActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Kick.started += instance.OnKick;
                @Kick.performed += instance.OnKick;
                @Kick.canceled += instance.OnKick;
                @Block.started += instance.OnBlock;
                @Block.performed += instance.OnBlock;
                @Block.canceled += instance.OnBlock;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
            }
        }
    }
    public JoyStickActions @JoyStick => new JoyStickActions(this);
    private int m_KeyBoardSchemeIndex = -1;
    public InputControlScheme KeyBoardScheme
    {
        get
        {
            if (m_KeyBoardSchemeIndex == -1) m_KeyBoardSchemeIndex = asset.FindControlSchemeIndex("KeyBoard");
            return asset.controlSchemes[m_KeyBoardSchemeIndex];
        }
    }
    private int m_GamePadSchemeIndex = -1;
    public InputControlScheme GamePadScheme
    {
        get
        {
            if (m_GamePadSchemeIndex == -1) m_GamePadSchemeIndex = asset.FindControlSchemeIndex("GamePad");
            return asset.controlSchemes[m_GamePadSchemeIndex];
        }
    }
    private int m_PcGamePadSchemeIndex = -1;
    public InputControlScheme PcGamePadScheme
    {
        get
        {
            if (m_PcGamePadSchemeIndex == -1) m_PcGamePadSchemeIndex = asset.FindControlSchemeIndex("PcGamePad");
            return asset.controlSchemes[m_PcGamePadSchemeIndex];
        }
    }
    public interface IGamePadActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnKick(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
    public interface IKeyBoardActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnKick(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
    public interface IJoyStickActions
    {
        void OnAttack(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnKick(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
}
